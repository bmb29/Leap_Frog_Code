
Hamil(XX,YY,QQ,PP)=( (QQ-XX)^2+(PP-YY)^2 )*( (QQ+XX)^2+(PP+YY)^2 )/((PP^4+2*PP^2*(XX^2-1)+(1+XX^2)^2 )*(QQ^4+2*QQ^2*(YY^2+1)+(YY^2-1)^2 ))
H_test(u)=( (u[3]-u[1])^2+(u[2]-u[4])^2 )*( (u[3]+u[1])^2+(u[2]+u[4])^2 )/ ((u[2]^4+2*u[2]^2*(u[1]^2-1)+(1+u[1]^2)^2 )*(u[3]^4+2*u[3]^2*(u[4]^2+1)+(u[4]^2-1)^2 ))
ODE2(z,w)=conj(  im * z.*( 1 ./(w.^2-z.^2)+1 ./(1+z.^2) ))
ODE1(z,w)=conj(  im * w.*( 1 ./(z.^2-w.^2)+1 ./(1+w.^2) ))
Centroid_ODE(z,w)=conj( 1 ./(1+z.^2)+1 ./(1+w.^2) )
Ham_numerator(Q,P)=((Q[1]+Q[2])^2+(P[1]+P[2])^2)*((Q[1]-Q[2])^2+(P[1]-P[2])^2)
Ham_denominator(Q,P)=(Q[1]^2+(P[2]-1)^2)*(Q[1]^2+(P[2]+1)^2)*(Q[2]^2+(P[1]-1)^2)*(Q[2]^2+(P[1]+1)^2)
Aref_Hamiltonian(Q,P,t)=1/2*sqrt(Ham_numerator(Q,P)/Ham_denominator(Q,P));
Hamiltonian_Dimer(q,p,t)=4sqrt(abs( (q[1]^2+p[1]^2)*(q[2]^2+p[2]^2) )/
(
        (2-2sqrt(2)*(p[1]+p[2])+(p[1]+p[2])^2+(q[1]-q[2])^2 )*
        (2+2sqrt(2)*(p[1]+p[2])+(p[1]+p[2])^2+(q[1]-q[2])^2 )*
        (2-2sqrt(2)*(p[1]-p[2])+(p[1]-p[2])^2+(q[1]+q[2])^2 )*
        (2+2sqrt(2)*(p[1]-p[2])+(p[1]-p[2])^2+(q[1]+q[2])^2 )

));
Hamiltonian_Dimer_Backwards(q,p,t)=-4sqrt(abs( (q[1]^2+p[1]^2)*(q[2]^2+p[2]^2) )/
(
        (2-2sqrt(2)*(p[1]+p[2])+(p[1]+p[2])^2+(q[1]-q[2])^2 )*
        (2+2sqrt(2)*(p[1]+p[2])+(p[1]+p[2])^2+(q[1]-q[2])^2 )*
        (2-2sqrt(2)*(p[1]-p[2])+(p[1]-p[2])^2+(q[1]+q[2])^2 )*
        (2+2sqrt(2)*(p[1]-p[2])+(p[1]-p[2])^2+(q[1]+q[2])^2 )

));
# function Eq_of_M(du,u,p,t)
#     du[1]=real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[2]=imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[3]=real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[4]=imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[5]=0
#     return
# end

# function Eq_of_M_Lagrangian_Descriptors(du,u,p,t)
#     du[1]=real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[2]=imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[3]=real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[4]=imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[5]=sqrt(abs(du[1])^2+ abs(du[2])^2+ abs(du[3])^2+ abs(du[4])^2)
#     return
# end

function Eq_of_M_Lagrangian_Descriptors(du,u,p,t)
    du[1]=real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
    du[2]=imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
    du[3]=real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
    du[4]=imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
    du[5]=abs(du[1])+ abs(du[2])+ abs(du[3])+ abs(du[4])
    return
end

# function Eq_of_M_Lagrangian_Descriptors(du,u,p,t)
#     du[1]=real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[2]=imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[3]=real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[4]=imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[5]=(sqrt(abs(du[1]))+ sqrt(abs(du[2]))+ sqrt(abs(du[3]))+ sqrt(abs(du[4])))^2
# end

# function Eq_of_M_Lagrangian_Descriptors_Backwards(du,u,p,t)
#     du[1]=-real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[2]=-imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[3]=-real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[4]=-imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[5]=(sqrt(abs(du[1]))+ sqrt(abs(du[2]))+ sqrt(abs(du[3]))+ sqrt(abs(du[4])))^2
#     return
# end

# function Eq_of_M_Lagrangian_Descriptors_Backwards(du,u,p,t)
#     du[1]=-real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[2]=-imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[3]=-real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[4]=-imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[5]=sqrt(abs(du[1])^2+ abs(du[2])^2+ abs(du[3])^2+ abs(du[4])^2)
#     return
# end

# function Eq_of_M_Lagrangian_Descriptors_Backwards(du,u,p,t)
#     du[1]=-real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[2]=-imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
#     du[3]=-real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[4]=-imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
#     du[5]=sqrt(abs(du[1])^2+ abs(du[2])^2+ abs(du[3])^2+ abs(du[4])^2)
#     return
# end

function Eq_of_M_Lagrangian_Descriptors_Backwards(du,u,p,t)
    du[1]=-real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
    du[2]=-imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
    du[3]=-real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
    du[4]=-imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
    du[5]=abs(du[1])+ abs(du[2])+ abs(du[3])+ abs(du[4])
    return
end


function Eq_of_M_LAB_FRAME(du,u,p,t)
    du[1]=real(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
    du[2]=imag(ODE1(u[1]+im*u[2],u[3]+im*u[4]))
    du[3]=real(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
    du[4]=imag(ODE2(u[1]+im*u[2],u[3]+im*u[4]))
    du[5]=real(Centroid_ODE(u[1]+im*u[2],u[3]+im*u[4]))
    du[6]=imag(Centroid_ODE(u[1]+im*u[2],u[3]+im*u[4]))
    return
end;


function Yfind(Q,P,H)
    try
        Y=sqrt( (1+(-1)*H*((-1)+P^2)^2)^(-1)*(P^2+(-1)*Q^2+H*((-1)+P^2)
        ^2*((-1)+Q^2)+sqrt(H*((-1)+P^2)^4+(-4)*((-1)+H*((-1)+P^2)^2)
        *((-1)*P^2+H*((-1)+P^2)^2)*Q^2 ))   )
     catch
        Y=zeros(0)
    end
end
function Yfind_Aref(Q,P,H_Aref)
    H=(2*H_Aref)^2
    try
        Y=sqrt( (1+(-1)*H*((-1)+P^2)^2)^(-1)*(P^2+(-1)*Q^2+H*((-1)+P^2)
        ^2*((-1)+Q^2)+sqrt(H*((-1)+P^2)^4+(-4)*((-1)+H*((-1)+P^2)^2)
        *((-1)*P^2+H*((-1)+P^2)^2)*Q^2 ))   )
     catch
        Y=zeros(0)
    end
end
using Roots
function Q1_find_dimer(Q2,P2,H_dimer)
    Q1_to_find(Q1)=Hamiltonian_Dimer([Q1,Q2],[0,P2],1)-H_dimer
    try
        Q1=find_zeros(Q1_to_find,0,4,maxeval=100,maxfnevals=300,tol=1e-15)
     catch
        Q1=zeros(0)
    end
end
function P1_find_dimer_second(Q2,P2,H_dimer)
    P1_to_find(P1)=Hamiltonian_Dimer([0,Q2],[P1,P2],1)-H_dimer
    try
        P1=find_zero(P1_to_find,1.4,maxeval=10000,maxfnevals=300,tol=1e-15)
     catch
        P1=zeros(0)
    end
end
function P1_find_dimer(Q,P,H)  
    coeff=(-16)*H^2 + 32*H^2*P^2 + (-24)*H^2*P^4 +8*H^2*P^6 + (-1)*H^2*P^8 + (-32)*H^2*Q^2 + 16*H^2*P^2*Q^2 + 8*H^2*P^4*Q^2 + (-4)*H^2*P^6*Q^2 + (-24)*H^2*Q^4 + (-8)*H^2*P^2*Q^4 + (-6)*H^2*P^4*Q^4 + (-8)*H^2*Q^6 + (-4)*H^2*P^2*Q^6 + (-1)*H^2*Q^8
    coeff2=(32*H^2 + 16*P^2 + (-16)*H^2*P^2 + (-8)*H^2*P^4 + 4*H^2*P^6 + 16*Q^2 + 16*H^2*Q^2 + (-80)*H^2*P^2*Q^2 + 4*H^2*P^4*Q^2 + (-8)*H^2*Q^4 + (-4)*H^2*P^2*Q^4 + (-4)*H^2*Q^6)
    coeff4=((-24)*H^2 + (-8)*H^2*P^2 + (-6)*H^2*P^4 + 8*H^2*Q^2 +  4*H^2*P^2*Q^2 + (-6)*H^2*Q^4)
    coeff6=(8*H^2 + 4*H^2*P^2 + (-4)*H^2*Q^2)
    coeff8=(-1)*H^2;
    poynomial4=[coeff,coeff2,coeff4,coeff6,coeff8];
    p1=[]
    sol=roots(poynomial4,polish=true)
    for k in 1:length(sol)
        if abs(imag(sol[k]))<1e-8
            push!(p1,sqrt(abs(sol[k])))
        end
    end
    if length(p1)==2
        return p1[2]
    else
        return zeros(0)
    end
end

function P1_poly(Q,P,H)  
    coeff=(-16)*H^2 + 32*H^2*P^2 + (-24)*H^2*P^4 +8*H^2*P^6 + (-1)*H^2*P^8 + (-32)*H^2*Q^2 + 16*H^2*P^2*Q^2 + 8*H^2*P^4*Q^2 + (-4)*H^2*P^6*Q^2 + (-24)*H^2*Q^4 + (-8)*H^2*P^2*Q^4 + (-6)*H^2*P^4*Q^4 + (-8)*H^2*Q^6 + (-4)*H^2*P^2*Q^6 + (-1)*H^2*Q^8
    coeff2=(32*H^2 + 16*P^2 + (-16)*H^2*P^2 + (-8)*H^2*P^4 + 4*H^2*P^6 + 16*Q^2 + 16*H^2*Q^2 + (-80)*H^2*P^2*Q^2 + 4*H^2*P^4*Q^2 + (-8)*H^2*Q^4 + (-4)*H^2*P^2*Q^4 + (-4)*H^2*Q^6)
    coeff4=((-24)*H^2 + (-8)*H^2*P^2 + (-6)*H^2*P^4 + 8*H^2*Q^2 +  4*H^2*P^2*Q^2 + (-6)*H^2*Q^4)
    coeff6=(8*H^2 + 4*H^2*P^2 + (-4)*H^2*Q^2)
    coeff8=(-1)*H^2;
    poynomial4=[coeff,coeff2,coeff4,coeff6,coeff8];
    p1=[]
    sol=roots(poynomial4,polish=true)
    for k in 1:length(sol)
        if abs(imag(sol[k]))<1e-8
            push!(p1,sqrt(abs(sol[k])))
        end
    end
    if length(p1)==2
        return minimum(p1)
    else
        return zeros(0)
    end
end
function P1_poly_min(Q,P,H)  
    coeff=(-16)*H^2 + 32*H^2*P^2 + (-24)*H^2*P^4 +8*H^2*P^6 + (-1)*H^2*P^8 + (-32)*H^2*Q^2 + 16*H^2*P^2*Q^2 + 8*H^2*P^4*Q^2 + (-4)*H^2*P^6*Q^2 + (-24)*H^2*Q^4 + (-8)*H^2*P^2*Q^4 + (-6)*H^2*P^4*Q^4 + (-8)*H^2*Q^6 + (-4)*H^2*P^2*Q^6 + (-1)*H^2*Q^8
    coeff2=(32*H^2 + 16*P^2 + (-16)*H^2*P^2 + (-8)*H^2*P^4 + 4*H^2*P^6 + 16*Q^2 + 16*H^2*Q^2 + (-80)*H^2*P^2*Q^2 + 4*H^2*P^4*Q^2 + (-8)*H^2*Q^4 + (-4)*H^2*P^2*Q^4 + (-4)*H^2*Q^6)
    coeff4=((-24)*H^2 + (-8)*H^2*P^2 + (-6)*H^2*P^4 + 8*H^2*Q^2 +  4*H^2*P^2*Q^2 + (-6)*H^2*Q^4)
    coeff6=(8*H^2 + 4*H^2*P^2 + (-4)*H^2*Q^2)
    coeff8=(-1)*H^2;
    poynomial4=[coeff,coeff2,coeff4,coeff6,coeff8];
    p1=[]
    sol=roots(poynomial4,polish=true)
    for k in 1:length(sol)
        if abs(imag(sol[k]))<1e-5
            push!(p1,sqrt(abs(sol[k])))
        end
    end
    if !isempty(p1)
        return minimum(p1)
    else
        return zeros(0)
    end
end
function P1_poly_max(Q,P,H)  
    coeff=(-16)*H^2 + 32*H^2*P^2 + (-24)*H^2*P^4 +8*H^2*P^6 + (-1)*H^2*P^8 + (-32)*H^2*Q^2 + 16*H^2*P^2*Q^2 + 8*H^2*P^4*Q^2 + (-4)*H^2*P^6*Q^2 + (-24)*H^2*Q^4 + (-8)*H^2*P^2*Q^4 + (-6)*H^2*P^4*Q^4 + (-8)*H^2*Q^6 + (-4)*H^2*P^2*Q^6 + (-1)*H^2*Q^8
    coeff2=(32*H^2 + 16*P^2 + (-16)*H^2*P^2 + (-8)*H^2*P^4 + 4*H^2*P^6 + 16*Q^2 + 16*H^2*Q^2 + (-80)*H^2*P^2*Q^2 + 4*H^2*P^4*Q^2 + (-8)*H^2*Q^4 + (-4)*H^2*P^2*Q^4 + (-4)*H^2*Q^6)
    coeff4=((-24)*H^2 + (-8)*H^2*P^2 + (-6)*H^2*P^4 + 8*H^2*Q^2 +  4*H^2*P^2*Q^2 + (-6)*H^2*Q^4)
    coeff6=(8*H^2 + 4*H^2*P^2 + (-4)*H^2*Q^2)
    coeff8=(-1)*H^2;
    poynomial4=[coeff,coeff2,coeff4,coeff6,coeff8];
    p1=[]
    sol=roots(poynomial4,polish=true)
    for k in 1:length(sol)
        if abs(imag(sol[k]))<1e-5
            push!(p1,sqrt(abs(sol[k])))
        end
    end
    if !isempty(p1)
        return maximum(p1)
    else
        return zeros(0)
    end
end
function Dimer_Eq_of_M(du, u,p, t)
    p=2
    du[1]=-((-4)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4]) +(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(   2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+  (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)  *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[3]^9+24*u[3]^6*   u[4]*u[1]*u[2]+4*u[3]^7*((-4)+(-2)*u[4]^2+3*u[1]^2+2*u[2]^2)+8*   u[3]^4*u[4]*u[1]*u[2]*(4+(-2)*u[4]^2+7*u[1]^2+2*u[2]^2)+4*u[3]^3*   u[1]^2*(12+3*u[4]^4+3*u[1]^4+(-4)*u[2]^2+3*u[2]^4+2*u[1]^2*((-2)+   u[2]^2)+(-2)*u[4]^2*((-2)+u[1]^2+u[2]^2))+8*u[4]*u[1]^3*u[2]*(u[4]^4+(   u[1]^2+(-1)*u[2]^2)^2+2*u[4]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+u[1]^2+   u[2]^2))+2*u[3]^5*(12+3*u[4]^4+9*u[1]^4+(-4)*u[2]^2+3*u[2]^4+8*   u[1]^2*((-2)+u[2]^2)+(-2)*u[4]^2*((-2)+4*u[1]^2+u[2]^2))+(-8)*   u[3]^2*u[4]*u[1]*u[2]*(u[4]^4+(-5)*u[1]^4+u[2]^4+(-8)*u[1]^2*(2+u[2]^2)   +(-4)*(3+u[2]^2)+2*u[4]^2*(2+4*u[1]^2+u[2]^2))+u[3]*((-1)*u[4]^8+   3*u[1]^8+8*u[1]^2*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*(2+u[2]^2)^4+(   -4)*u[4]^6*((-2)+2*u[1]^2+u[2]^2)+(-2)*u[1]^4*(20+36*u[2]^2+5*   u[2]^4)+(-2)*u[4]^4*(12+5*u[1]^4+(-4)*u[2]^2+3*u[2]^4+4*u[1]^2*((   -2)+u[2]^2))+4*u[4]^2*((-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+u[1]^4*(   18+23*u[2]^2)+2*u[1]^2*(4+20*u[2]^2+u[2]^4)))));
    du[2]=-(4*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*  2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+  u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2])   ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+   (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)   *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*((-3)*u[4]^9+(-24)*   u[3]*u[4]^6*u[1]*u[2]+8*u[3]*u[4]^4*u[1]*u[2]*((-4)+2*u[3]^2+(-2)*   u[1]^2+(-7)*u[2]^2)+4*u[4]^7*(4+2*u[3]^2+(-2)*u[1]^2+(-3)*u[2]^2)+  u[4]*((u[3]^4+2*u[3]^2*((-2)+u[1]^2)+(2+u[1]^2)^2)^2+8*(u[3]^6+  u[3]^4*((-2)+u[1]^2)+(-1)*((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[3]^2*  (4+20*u[1]^2+u[1]^4))*u[2]^2+2*(20+5*u[3]^4+36*u[1]^2+5*u[1]^4+(-2)*u[3]^2*(18+23*u[1]^2))*u[2]^4+(-3)*u[2]^8)+(-4)*u[4]^3*  u[2]^2*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+2*((-2)+u[1]^2)*u[2]^2+   3*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+u[2]^2))+(-8)*u[3]*u[1]*u[2]^3*(   u[3]^4+(u[1]^2+(-1)*u[2]^2)^2+2*u[3]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+   u[1]^2+u[2]^2))+(-2)*u[4]^5*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+8*((  -2)+u[1]^2)*u[2]^2+9*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+4*u[2]^2))+8*  u[3]*u[4]^2*u[1]*u[2]*((-12)+u[3]^4+(-4)*u[1]^2+u[1]^4+(-8)*(2+u[1]^2)   *u[2]^2+(-5)*u[2]^4+2*u[3]^2*(2+u[1]^2+4*u[2]^2))));
    du[3]=-(4*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*( 2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+( -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)*((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[1]^9+24*u[3]*u[4]*u[1]^6*u[2]+4*u[1]^7*(4+3*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+8*u[3]*u[4]* u[1]^4*u[2]*((-4)+7*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+4*u[3]^2*u[1]^3*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[2]^2))+2*u[1]^5*(12+9*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+8*u[3]^2*(2+u[4]^2+(-1)* u[2]^2))+8*u[3]*u[4]*u[1]^2*u[2]*(5*u[3]^4+8*u[3]^2*((-2)+u[4]^2+(-1) *u[2]^2)+4*(3+(-1)*u[4]^2+u[2]^2)+(-1)*(u[4]^2+u[2]^2)^2)+8*u[3]^3*u[4]*u[2]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[2]^2)+2*u[3]^2*(2+( -1)*u[4]^2+u[2]^2)+(u[4]^2+u[2]^2)^2)+u[1]*(3*u[3]^8+(-1)*(u[4]^4+2* u[4]^2*((-2)+u[2]^2)+(2+u[2]^2)^2)^2+(-2)*u[3]^4*(20+5*u[4]^4+ 36*u[2]^2+5*u[2]^4+(-2)*u[4]^2*(18+23*u[2]^2))+8*u[3]^2*(u[4]^6+ u[4]^4*((-2)+u[2]^2)+(-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*u[4]^2*(4+20*u[2]^2+u[2]^4)))));
    du[4]=-((-4)*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*((-8)*u[3]*u[4]^3*u[1]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[1]^2)+2*u[3]^2*(2+(-1)*u[4]^2+u[1]^2)+(u[4]^2+u[1]^2)^2)+(u[3]^8+(-3)*u[4]^8+8*u[4]^2*((-2)+u[1]^2)*(2+u[1]^2)^2+(2+u[1]^2)^4+4*u[3]^6*((-2)+(-2)*u[4]^2+u[1]^2)+2*u[3]^4*(12+8*u[4]^2+5*u[4]^4+(-4)*(1+u[4]^2)*u[1]^2+3*u[1]^4)+2*u[4]^4*(20+36*u[1]^2+5*u[1]^4)+4*u[3]^2*(((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[4]^4*(18+23*u[1]^2)+2*u[4]^2*(4+20*u[1]^2+u[1]^4)))*u[2]+8*u[3]*u[4]*u[1]*(u[3]^4+(-5)*u[4]^4+u[1]^4+8*u[4]^2*(2+u[1]^2)+(-4)*(3+u[1]^2)+2*u[3]^2*(2+(-4)*u[4]^2+u[1]^2))*u[2]^2+( -4)*u[4]^2*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[1]^2+3*u[1]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[1]^2))*u[2]^3+(-8)*u[3]*u[4]* u[1]*(2*u[3]^2+7*u[4]^2+(-2)*(2+u[1]^2))*u[2]^4+(-2)*(12+3*u[3]^4+ 9*u[4]^4+(-4)*u[1]^2+3*u[1]^4+u[3]^2*(4+8*u[4]^2+(-2)*u[1]^2)+(-8) *u[4]^2*((-2)+u[1]^2))*u[2]^5+(-24)*u[3]*u[4]*u[1]*u[2]^6+(-4)*(4+ 2*u[3]^2+3*u[4]^2+(-2)*u[1]^2)*u[2]^7+(-3)*u[2]^9)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+ (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+( u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2) *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2));
    du[5]=(abs(du[1])^(1/p))+ (abs(du[2])^(1/p))+ (abs(du[3])^(1/p))+ (abs(du[4])^(1/p)) ;
    du[6]=0;
end

# function Dimer_Eq_of_M(du, u,p, t)
#     du[1]=-((-4)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4]) +(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(   2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+  (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)  *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[3]^9+24*u[3]^6*   u[4]*u[1]*u[2]+4*u[3]^7*((-4)+(-2)*u[4]^2+3*u[1]^2+2*u[2]^2)+8*   u[3]^4*u[4]*u[1]*u[2]*(4+(-2)*u[4]^2+7*u[1]^2+2*u[2]^2)+4*u[3]^3*   u[1]^2*(12+3*u[4]^4+3*u[1]^4+(-4)*u[2]^2+3*u[2]^4+2*u[1]^2*((-2)+   u[2]^2)+(-2)*u[4]^2*((-2)+u[1]^2+u[2]^2))+8*u[4]*u[1]^3*u[2]*(u[4]^4+(   u[1]^2+(-1)*u[2]^2)^2+2*u[4]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+u[1]^2+   u[2]^2))+2*u[3]^5*(12+3*u[4]^4+9*u[1]^4+(-4)*u[2]^2+3*u[2]^4+8*   u[1]^2*((-2)+u[2]^2)+(-2)*u[4]^2*((-2)+4*u[1]^2+u[2]^2))+(-8)*   u[3]^2*u[4]*u[1]*u[2]*(u[4]^4+(-5)*u[1]^4+u[2]^4+(-8)*u[1]^2*(2+u[2]^2)   +(-4)*(3+u[2]^2)+2*u[4]^2*(2+4*u[1]^2+u[2]^2))+u[3]*((-1)*u[4]^8+   3*u[1]^8+8*u[1]^2*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*(2+u[2]^2)^4+(   -4)*u[4]^6*((-2)+2*u[1]^2+u[2]^2)+(-2)*u[1]^4*(20+36*u[2]^2+5*   u[2]^4)+(-2)*u[4]^4*(12+5*u[1]^4+(-4)*u[2]^2+3*u[2]^4+4*u[1]^2*((   -2)+u[2]^2))+4*u[4]^2*((-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+u[1]^4*(   18+23*u[2]^2)+2*u[1]^2*(4+20*u[2]^2+u[2]^4)))));
#     du[2]=-(4*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*  2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+  u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2])   ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+   (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)   *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*((-3)*u[4]^9+(-24)*   u[3]*u[4]^6*u[1]*u[2]+8*u[3]*u[4]^4*u[1]*u[2]*((-4)+2*u[3]^2+(-2)*   u[1]^2+(-7)*u[2]^2)+4*u[4]^7*(4+2*u[3]^2+(-2)*u[1]^2+(-3)*u[2]^2)+  u[4]*((u[3]^4+2*u[3]^2*((-2)+u[1]^2)+(2+u[1]^2)^2)^2+8*(u[3]^6+  u[3]^4*((-2)+u[1]^2)+(-1)*((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[3]^2*  (4+20*u[1]^2+u[1]^4))*u[2]^2+2*(20+5*u[3]^4+36*u[1]^2+5*u[1]^4+(-2)*u[3]^2*(18+23*u[1]^2))*u[2]^4+(-3)*u[2]^8)+(-4)*u[4]^3*  u[2]^2*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+2*((-2)+u[1]^2)*u[2]^2+   3*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+u[2]^2))+(-8)*u[3]*u[1]*u[2]^3*(   u[3]^4+(u[1]^2+(-1)*u[2]^2)^2+2*u[3]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+   u[1]^2+u[2]^2))+(-2)*u[4]^5*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+8*((  -2)+u[1]^2)*u[2]^2+9*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+4*u[2]^2))+8*  u[3]*u[4]^2*u[1]*u[2]*((-12)+u[3]^4+(-4)*u[1]^2+u[1]^4+(-8)*(2+u[1]^2)   *u[2]^2+(-5)*u[2]^4+2*u[3]^2*(2+u[1]^2+4*u[2]^2))));
#     du[3]=-(4*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*( 2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+( -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)*((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[1]^9+24*u[3]*u[4]*u[1]^6*u[2]+4*u[1]^7*(4+3*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+8*u[3]*u[4]* u[1]^4*u[2]*((-4)+7*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+4*u[3]^2*u[1]^3*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[2]^2))+2*u[1]^5*(12+9*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+8*u[3]^2*(2+u[4]^2+(-1)* u[2]^2))+8*u[3]*u[4]*u[1]^2*u[2]*(5*u[3]^4+8*u[3]^2*((-2)+u[4]^2+(-1) *u[2]^2)+4*(3+(-1)*u[4]^2+u[2]^2)+(-1)*(u[4]^2+u[2]^2)^2)+8*u[3]^3*u[4]*u[2]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[2]^2)+2*u[3]^2*(2+( -1)*u[4]^2+u[2]^2)+(u[4]^2+u[2]^2)^2)+u[1]*(3*u[3]^8+(-1)*(u[4]^4+2* u[4]^2*((-2)+u[2]^2)+(2+u[2]^2)^2)^2+(-2)*u[3]^4*(20+5*u[4]^4+ 36*u[2]^2+5*u[2]^4+(-2)*u[4]^2*(18+23*u[2]^2))+8*u[3]^2*(u[4]^6+ u[4]^4*((-2)+u[2]^2)+(-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*u[4]^2*(4+20*u[2]^2+u[2]^4)))));
#     du[4]=-((-4)*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*((-8)*u[3]*u[4]^3*u[1]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[1]^2)+2*u[3]^2*(2+(-1)*u[4]^2+u[1]^2)+(u[4]^2+u[1]^2)^2)+(u[3]^8+(-3)*u[4]^8+8*u[4]^2*((-2)+u[1]^2)*(2+u[1]^2)^2+(2+u[1]^2)^4+4*u[3]^6*((-2)+(-2)*u[4]^2+u[1]^2)+2*u[3]^4*(12+8*u[4]^2+5*u[4]^4+(-4)*(1+u[4]^2)*u[1]^2+3*u[1]^4)+2*u[4]^4*(20+36*u[1]^2+5*u[1]^4)+4*u[3]^2*(((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[4]^4*(18+23*u[1]^2)+2*u[4]^2*(4+20*u[1]^2+u[1]^4)))*u[2]+8*u[3]*u[4]*u[1]*(u[3]^4+(-5)*u[4]^4+u[1]^4+8*u[4]^2*(2+u[1]^2)+(-4)*(3+u[1]^2)+2*u[3]^2*(2+(-4)*u[4]^2+u[1]^2))*u[2]^2+( -4)*u[4]^2*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[1]^2+3*u[1]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[1]^2))*u[2]^3+(-8)*u[3]*u[4]* u[1]*(2*u[3]^2+7*u[4]^2+(-2)*(2+u[1]^2))*u[2]^4+(-2)*(12+3*u[3]^4+ 9*u[4]^4+(-4)*u[1]^2+3*u[1]^4+u[3]^2*(4+8*u[4]^2+(-2)*u[1]^2)+(-8) *u[4]^2*((-2)+u[1]^2))*u[2]^5+(-24)*u[3]*u[4]*u[1]*u[2]^6+(-4)*(4+ 2*u[3]^2+3*u[4]^2+(-2)*u[1]^2)*u[2]^7+(-3)*u[2]^9)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+ (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+( u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2) *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2));
#     du[5]=sqrt(abs(du[1])^2+ abs(du[2])^2+ abs(du[3])^2+ abs(du[4])^2)
#     du[6]=0;
# end


function Dimer_Eq_of_M_Backwards(du, u,p, t)
    p=2
    du[1]=((-4)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4]) +(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(   2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+  (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)  *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[3]^9+24*u[3]^6*   u[4]*u[1]*u[2]+4*u[3]^7*((-4)+(-2)*u[4]^2+3*u[1]^2+2*u[2]^2)+8*   u[3]^4*u[4]*u[1]*u[2]*(4+(-2)*u[4]^2+7*u[1]^2+2*u[2]^2)+4*u[3]^3*   u[1]^2*(12+3*u[4]^4+3*u[1]^4+(-4)*u[2]^2+3*u[2]^4+2*u[1]^2*((-2)+   u[2]^2)+(-2)*u[4]^2*((-2)+u[1]^2+u[2]^2))+8*u[4]*u[1]^3*u[2]*(u[4]^4+(   u[1]^2+(-1)*u[2]^2)^2+2*u[4]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+u[1]^2+   u[2]^2))+2*u[3]^5*(12+3*u[4]^4+9*u[1]^4+(-4)*u[2]^2+3*u[2]^4+8*   u[1]^2*((-2)+u[2]^2)+(-2)*u[4]^2*((-2)+4*u[1]^2+u[2]^2))+(-8)*   u[3]^2*u[4]*u[1]*u[2]*(u[4]^4+(-5)*u[1]^4+u[2]^4+(-8)*u[1]^2*(2+u[2]^2)   +(-4)*(3+u[2]^2)+2*u[4]^2*(2+4*u[1]^2+u[2]^2))+u[3]*((-1)*u[4]^8+   3*u[1]^8+8*u[1]^2*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*(2+u[2]^2)^4+(   -4)*u[4]^6*((-2)+2*u[1]^2+u[2]^2)+(-2)*u[1]^4*(20+36*u[2]^2+5*   u[2]^4)+(-2)*u[4]^4*(12+5*u[1]^4+(-4)*u[2]^2+3*u[2]^4+4*u[1]^2*((   -2)+u[2]^2))+4*u[4]^2*((-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+u[1]^4*(   18+23*u[2]^2)+2*u[1]^2*(4+20*u[2]^2+u[2]^4)))));
    du[2]=(4*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*  2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+  u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2])   ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+   (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)   *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*((-3)*u[4]^9+(-24)*   u[3]*u[4]^6*u[1]*u[2]+8*u[3]*u[4]^4*u[1]*u[2]*((-4)+2*u[3]^2+(-2)*   u[1]^2+(-7)*u[2]^2)+4*u[4]^7*(4+2*u[3]^2+(-2)*u[1]^2+(-3)*u[2]^2)+  u[4]*((u[3]^4+2*u[3]^2*((-2)+u[1]^2)+(2+u[1]^2)^2)^2+8*(u[3]^6+  u[3]^4*((-2)+u[1]^2)+(-1)*((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[3]^2*  (4+20*u[1]^2+u[1]^4))*u[2]^2+2*(20+5*u[3]^4+36*u[1]^2+5*u[1]^4+(-2)*u[3]^2*(18+23*u[1]^2))*u[2]^4+(-3)*u[2]^8)+(-4)*u[4]^3*  u[2]^2*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+2*((-2)+u[1]^2)*u[2]^2+   3*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+u[2]^2))+(-8)*u[3]*u[1]*u[2]^3*(   u[3]^4+(u[1]^2+(-1)*u[2]^2)^2+2*u[3]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+   u[1]^2+u[2]^2))+(-2)*u[4]^5*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+8*((  -2)+u[1]^2)*u[2]^2+9*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+4*u[2]^2))+8*  u[3]*u[4]^2*u[1]*u[2]*((-12)+u[3]^4+(-4)*u[1]^2+u[1]^4+(-8)*(2+u[1]^2)   *u[2]^2+(-5)*u[2]^4+2*u[3]^2*(2+u[1]^2+4*u[2]^2))));
    du[3]=(4*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*( 2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+( -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)*((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[1]^9+24*u[3]*u[4]*u[1]^6*u[2]+4*u[1]^7*(4+3*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+8*u[3]*u[4]* u[1]^4*u[2]*((-4)+7*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+4*u[3]^2*u[1]^3*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[2]^2))+2*u[1]^5*(12+9*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+8*u[3]^2*(2+u[4]^2+(-1)* u[2]^2))+8*u[3]*u[4]*u[1]^2*u[2]*(5*u[3]^4+8*u[3]^2*((-2)+u[4]^2+(-1) *u[2]^2)+4*(3+(-1)*u[4]^2+u[2]^2)+(-1)*(u[4]^2+u[2]^2)^2)+8*u[3]^3*u[4]*u[2]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[2]^2)+2*u[3]^2*(2+( -1)*u[4]^2+u[2]^2)+(u[4]^2+u[2]^2)^2)+u[1]*(3*u[3]^8+(-1)*(u[4]^4+2* u[4]^2*((-2)+u[2]^2)+(2+u[2]^2)^2)^2+(-2)*u[3]^4*(20+5*u[4]^4+ 36*u[2]^2+5*u[2]^4+(-2)*u[4]^2*(18+23*u[2]^2))+8*u[3]^2*(u[4]^6+ u[4]^4*((-2)+u[2]^2)+(-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*u[4]^2*(4+20*u[2]^2+u[2]^4)))));
    du[4]=((-4)*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*((-8)*u[3]*u[4]^3*u[1]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[1]^2)+2*u[3]^2*(2+(-1)*u[4]^2+u[1]^2)+(u[4]^2+u[1]^2)^2)+(u[3]^8+(-3)*u[4]^8+8*u[4]^2*((-2)+u[1]^2)*(2+u[1]^2)^2+(2+u[1]^2)^4+4*u[3]^6*((-2)+(-2)*u[4]^2+u[1]^2)+2*u[3]^4*(12+8*u[4]^2+5*u[4]^4+(-4)*(1+u[4]^2)*u[1]^2+3*u[1]^4)+2*u[4]^4*(20+36*u[1]^2+5*u[1]^4)+4*u[3]^2*(((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[4]^4*(18+23*u[1]^2)+2*u[4]^2*(4+20*u[1]^2+u[1]^4)))*u[2]+8*u[3]*u[4]*u[1]*(u[3]^4+(-5)*u[4]^4+u[1]^4+8*u[4]^2*(2+u[1]^2)+(-4)*(3+u[1]^2)+2*u[3]^2*(2+(-4)*u[4]^2+u[1]^2))*u[2]^2+( -4)*u[4]^2*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[1]^2+3*u[1]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[1]^2))*u[2]^3+(-8)*u[3]*u[4]* u[1]*(2*u[3]^2+7*u[4]^2+(-2)*(2+u[1]^2))*u[2]^4+(-2)*(12+3*u[3]^4+ 9*u[4]^4+(-4)*u[1]^2+3*u[1]^4+u[3]^2*(4+8*u[4]^2+(-2)*u[1]^2)+(-8) *u[4]^2*((-2)+u[1]^2))*u[2]^5+(-24)*u[3]*u[4]*u[1]*u[2]^6+(-4)*(4+ 2*u[3]^2+3*u[4]^2+(-2)*u[1]^2)*u[2]^7+(-3)*u[2]^9)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+ (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+( u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2) *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2));
    du[5]=(abs(du[1])^(1/p))+ (abs(du[2])^(1/p))+ (abs(du[3])^(1/p))+ (abs(du[4])^(1/p)) ;
    du[6]=0;
end

# function Dimer_Eq_of_M_Backwards(du, u,p, t)
#     du[1]=((-4)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4]) +(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(   2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+  (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)  *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[3]^9+24*u[3]^6*   u[4]*u[1]*u[2]+4*u[3]^7*((-4)+(-2)*u[4]^2+3*u[1]^2+2*u[2]^2)+8*   u[3]^4*u[4]*u[1]*u[2]*(4+(-2)*u[4]^2+7*u[1]^2+2*u[2]^2)+4*u[3]^3*   u[1]^2*(12+3*u[4]^4+3*u[1]^4+(-4)*u[2]^2+3*u[2]^4+2*u[1]^2*((-2)+   u[2]^2)+(-2)*u[4]^2*((-2)+u[1]^2+u[2]^2))+8*u[4]*u[1]^3*u[2]*(u[4]^4+(   u[1]^2+(-1)*u[2]^2)^2+2*u[4]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+u[1]^2+   u[2]^2))+2*u[3]^5*(12+3*u[4]^4+9*u[1]^4+(-4)*u[2]^2+3*u[2]^4+8*   u[1]^2*((-2)+u[2]^2)+(-2)*u[4]^2*((-2)+4*u[1]^2+u[2]^2))+(-8)*   u[3]^2*u[4]*u[1]*u[2]*(u[4]^4+(-5)*u[1]^4+u[2]^4+(-8)*u[1]^2*(2+u[2]^2)   +(-4)*(3+u[2]^2)+2*u[4]^2*(2+4*u[1]^2+u[2]^2))+u[3]*((-1)*u[4]^8+   3*u[1]^8+8*u[1]^2*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*(2+u[2]^2)^4+(   -4)*u[4]^6*((-2)+2*u[1]^2+u[2]^2)+(-2)*u[1]^4*(20+36*u[2]^2+5*   u[2]^4)+(-2)*u[4]^4*(12+5*u[1]^4+(-4)*u[2]^2+3*u[2]^4+4*u[1]^2*((   -2)+u[2]^2))+4*u[4]^2*((-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+u[1]^4*(   18+23*u[2]^2)+2*u[1]^2*(4+20*u[2]^2+u[2]^4)))));
#     du[2]=(4*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*  2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+  u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2])   ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+   (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)   *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*((-3)*u[4]^9+(-24)*   u[3]*u[4]^6*u[1]*u[2]+8*u[3]*u[4]^4*u[1]*u[2]*((-4)+2*u[3]^2+(-2)*   u[1]^2+(-7)*u[2]^2)+4*u[4]^7*(4+2*u[3]^2+(-2)*u[1]^2+(-3)*u[2]^2)+  u[4]*((u[3]^4+2*u[3]^2*((-2)+u[1]^2)+(2+u[1]^2)^2)^2+8*(u[3]^6+  u[3]^4*((-2)+u[1]^2)+(-1)*((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[3]^2*  (4+20*u[1]^2+u[1]^4))*u[2]^2+2*(20+5*u[3]^4+36*u[1]^2+5*u[1]^4+(-2)*u[3]^2*(18+23*u[1]^2))*u[2]^4+(-3)*u[2]^8)+(-4)*u[4]^3*  u[2]^2*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+2*((-2)+u[1]^2)*u[2]^2+   3*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+u[2]^2))+(-8)*u[3]*u[1]*u[2]^3*(   u[3]^4+(u[1]^2+(-1)*u[2]^2)^2+2*u[3]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+   u[1]^2+u[2]^2))+(-2)*u[4]^5*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+8*((  -2)+u[1]^2)*u[2]^2+9*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+4*u[2]^2))+8*  u[3]*u[4]^2*u[1]*u[2]*((-12)+u[3]^4+(-4)*u[1]^2+u[1]^4+(-8)*(2+u[1]^2)   *u[2]^2+(-5)*u[2]^4+2*u[3]^2*(2+u[1]^2+4*u[2]^2))));
#     du[3]=(4*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*( 2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+( -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)*((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[1]^9+24*u[3]*u[4]*u[1]^6*u[2]+4*u[1]^7*(4+3*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+8*u[3]*u[4]* u[1]^4*u[2]*((-4)+7*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+4*u[3]^2*u[1]^3*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[2]^2))+2*u[1]^5*(12+9*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+8*u[3]^2*(2+u[4]^2+(-1)* u[2]^2))+8*u[3]*u[4]*u[1]^2*u[2]*(5*u[3]^4+8*u[3]^2*((-2)+u[4]^2+(-1) *u[2]^2)+4*(3+(-1)*u[4]^2+u[2]^2)+(-1)*(u[4]^2+u[2]^2)^2)+8*u[3]^3*u[4]*u[2]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[2]^2)+2*u[3]^2*(2+( -1)*u[4]^2+u[2]^2)+(u[4]^2+u[2]^2)^2)+u[1]*(3*u[3]^8+(-1)*(u[4]^4+2* u[4]^2*((-2)+u[2]^2)+(2+u[2]^2)^2)^2+(-2)*u[3]^4*(20+5*u[4]^4+ 36*u[2]^2+5*u[2]^4+(-2)*u[4]^2*(18+23*u[2]^2))+8*u[3]^2*(u[4]^6+ u[4]^4*((-2)+u[2]^2)+(-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*u[4]^2*(4+20*u[2]^2+u[2]^4)))));
#     du[4]=((-4)*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*((-8)*u[3]*u[4]^3*u[1]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[1]^2)+2*u[3]^2*(2+(-1)*u[4]^2+u[1]^2)+(u[4]^2+u[1]^2)^2)+(u[3]^8+(-3)*u[4]^8+8*u[4]^2*((-2)+u[1]^2)*(2+u[1]^2)^2+(2+u[1]^2)^4+4*u[3]^6*((-2)+(-2)*u[4]^2+u[1]^2)+2*u[3]^4*(12+8*u[4]^2+5*u[4]^4+(-4)*(1+u[4]^2)*u[1]^2+3*u[1]^4)+2*u[4]^4*(20+36*u[1]^2+5*u[1]^4)+4*u[3]^2*(((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[4]^4*(18+23*u[1]^2)+2*u[4]^2*(4+20*u[1]^2+u[1]^4)))*u[2]+8*u[3]*u[4]*u[1]*(u[3]^4+(-5)*u[4]^4+u[1]^4+8*u[4]^2*(2+u[1]^2)+(-4)*(3+u[1]^2)+2*u[3]^2*(2+(-4)*u[4]^2+u[1]^2))*u[2]^2+( -4)*u[4]^2*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[1]^2+3*u[1]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[1]^2))*u[2]^3+(-8)*u[3]*u[4]* u[1]*(2*u[3]^2+7*u[4]^2+(-2)*(2+u[1]^2))*u[2]^4+(-2)*(12+3*u[3]^4+ 9*u[4]^4+(-4)*u[1]^2+3*u[1]^4+u[3]^2*(4+8*u[4]^2+(-2)*u[1]^2)+(-8) *u[4]^2*((-2)+u[1]^2))*u[2]^5+(-24)*u[3]*u[4]*u[1]*u[2]^6+(-4)*(4+ 2*u[3]^2+3*u[4]^2+(-2)*u[1]^2)*u[2]^7+(-3)*u[2]^9)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+ (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+( u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2) *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2));
#     du[5]=sqrt(abs(du[1])^2+ abs(du[2])^2+ abs(du[3])^2+ abs(du[4])^2)
# end

function Dimer_Eq_of_M_hits(du, u,p, t)
  du[1]=-((-4)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4]) +(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(   2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+  (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)  *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[3]^9+24*u[3]^6*   u[4]*u[1]*u[2]+4*u[3]^7*((-4)+(-2)*u[4]^2+3*u[1]^2+2*u[2]^2)+8*   u[3]^4*u[4]*u[1]*u[2]*(4+(-2)*u[4]^2+7*u[1]^2+2*u[2]^2)+4*u[3]^3*   u[1]^2*(12+3*u[4]^4+3*u[1]^4+(-4)*u[2]^2+3*u[2]^4+2*u[1]^2*((-2)+   u[2]^2)+(-2)*u[4]^2*((-2)+u[1]^2+u[2]^2))+8*u[4]*u[1]^3*u[2]*(u[4]^4+(   u[1]^2+(-1)*u[2]^2)^2+2*u[4]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+u[1]^2+   u[2]^2))+2*u[3]^5*(12+3*u[4]^4+9*u[1]^4+(-4)*u[2]^2+3*u[2]^4+8*   u[1]^2*((-2)+u[2]^2)+(-2)*u[4]^2*((-2)+4*u[1]^2+u[2]^2))+(-8)*   u[3]^2*u[4]*u[1]*u[2]*(u[4]^4+(-5)*u[1]^4+u[2]^4+(-8)*u[1]^2*(2+u[2]^2)   +(-4)*(3+u[2]^2)+2*u[4]^2*(2+4*u[1]^2+u[2]^2))+u[3]*((-1)*u[4]^8+   3*u[1]^8+8*u[1]^2*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*(2+u[2]^2)^4+(   -4)*u[4]^6*((-2)+2*u[1]^2+u[2]^2)+(-2)*u[1]^4*(20+36*u[2]^2+5*   u[2]^4)+(-2)*u[4]^4*(12+5*u[1]^4+(-4)*u[2]^2+3*u[2]^4+4*u[1]^2*((   -2)+u[2]^2))+4*u[4]^2*((-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+u[1]^4*(   18+23*u[2]^2)+2*u[1]^2*(4+20*u[2]^2+u[2]^4)))));
  du[2]=-(4*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*  2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+  u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*   u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2)   *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2])   ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+   (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(   -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(   u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)   *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*((-3)*u[4]^9+(-24)*   u[3]*u[4]^6*u[1]*u[2]+8*u[3]*u[4]^4*u[1]*u[2]*((-4)+2*u[3]^2+(-2)*   u[1]^2+(-7)*u[2]^2)+4*u[4]^7*(4+2*u[3]^2+(-2)*u[1]^2+(-3)*u[2]^2)+  u[4]*((u[3]^4+2*u[3]^2*((-2)+u[1]^2)+(2+u[1]^2)^2)^2+8*(u[3]^6+  u[3]^4*((-2)+u[1]^2)+(-1)*((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[3]^2*  (4+20*u[1]^2+u[1]^4))*u[2]^2+2*(20+5*u[3]^4+36*u[1]^2+5*u[1]^4+(-2)*u[3]^2*(18+23*u[1]^2))*u[2]^4+(-3)*u[2]^8)+(-4)*u[4]^3*  u[2]^2*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+2*((-2)+u[1]^2)*u[2]^2+   3*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+u[2]^2))+(-8)*u[3]*u[1]*u[2]^3*(   u[3]^4+(u[1]^2+(-1)*u[2]^2)^2+2*u[3]^2*(2+u[1]^2+u[2]^2)+(-4)*(3+   u[1]^2+u[2]^2))+(-2)*u[4]^5*(12+3*u[3]^4+(-4)*u[1]^2+3*u[1]^4+8*((  -2)+u[1]^2)*u[2]^2+9*u[2]^4+(-2)*u[3]^2*((-2)+u[1]^2+4*u[2]^2))+8*  u[3]*u[4]^2*u[1]*u[2]*((-12)+u[3]^4+(-4)*u[1]^2+u[1]^4+(-8)*(2+u[1]^2)   *u[2]^2+(-5)*u[2]^4+2*u[3]^2*(2+u[1]^2+4*u[2]^2))));
  du[3]=-(4*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*( 2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(u[4]^2+u[2]^2)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+( -1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+(u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2)*((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2)*(3*u[1]^9+24*u[3]*u[4]*u[1]^6*u[2]+4*u[1]^7*(4+3*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+8*u[3]*u[4]* u[1]^4*u[2]*((-4)+7*u[3]^2+2*u[4]^2+(-2)*u[2]^2)+4*u[3]^2*u[1]^3*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[2]^2))+2*u[1]^5*(12+9*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[2]^2+3*u[2]^4+8*u[3]^2*(2+u[4]^2+(-1)* u[2]^2))+8*u[3]*u[4]*u[1]^2*u[2]*(5*u[3]^4+8*u[3]^2*((-2)+u[4]^2+(-1) *u[2]^2)+4*(3+(-1)*u[4]^2+u[2]^2)+(-1)*(u[4]^2+u[2]^2)^2)+8*u[3]^3*u[4]*u[2]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[2]^2)+2*u[3]^2*(2+( -1)*u[4]^2+u[2]^2)+(u[4]^2+u[2]^2)^2)+u[1]*(3*u[3]^8+(-1)*(u[4]^4+2* u[4]^2*((-2)+u[2]^2)+(2+u[2]^2)^2)^2+(-2)*u[3]^4*(20+5*u[4]^4+ 36*u[2]^2+5*u[2]^4+(-2)*u[4]^2*(18+23*u[2]^2))+8*u[3]^2*(u[4]^6+ u[4]^4*((-2)+u[2]^2)+(-1)*((-2)+u[2]^2)*(2+u[2]^2)^2+(-1)*u[4]^2*(4+20*u[2]^2+u[2]^4)))));
  du[4]=-((-4)*(u[3]^2+u[1]^2)*(2+u[3]^2+(-2)*2^(1/2)*u[4]+u[4]^2+2*u[3]*((-1)*2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+2*u[3]*(2^(1/2)+u[4])+(u[1]+(-1)*u[2])^2)^(-2)*((-8)*u[3]*u[4]^3*u[1]*(u[3]^4+4*((-3)+u[4]^2+(-1)*u[1]^2)+2*u[3]^2*(2+(-1)*u[4]^2+u[1]^2)+(u[4]^2+u[1]^2)^2)+(u[3]^8+(-3)*u[4]^8+8*u[4]^2*((-2)+u[1]^2)*(2+u[1]^2)^2+(2+u[1]^2)^4+4*u[3]^6*((-2)+(-2)*u[4]^2+u[1]^2)+2*u[3]^4*(12+8*u[4]^2+5*u[4]^4+(-4)*(1+u[4]^2)*u[1]^2+3*u[1]^4)+2*u[4]^4*(20+36*u[1]^2+5*u[1]^4)+4*u[3]^2*(((-2)+u[1]^2)*(2+u[1]^2)^2+(-1)*u[4]^4*(18+23*u[1]^2)+2*u[4]^2*(4+20*u[1]^2+u[1]^4)))*u[2]+8*u[3]*u[4]*u[1]*(u[3]^4+(-5)*u[4]^4+u[1]^4+8*u[4]^2*(2+u[1]^2)+(-4)*(3+u[1]^2)+2*u[3]^2*(2+(-4)*u[4]^2+u[1]^2))*u[2]^2+( -4)*u[4]^2*(12+3*u[3]^4+4*u[4]^2+3*u[4]^4+(-2)*(2+u[4]^2)*u[1]^2+3*u[1]^4+2*u[3]^2*(2+u[4]^2+(-1)*u[1]^2))*u[2]^3+(-8)*u[3]*u[4]* u[1]*(2*u[3]^2+7*u[4]^2+(-2)*(2+u[1]^2))*u[2]^4+(-2)*(12+3*u[3]^4+ 9*u[4]^4+(-4)*u[1]^2+3*u[1]^4+u[3]^2*(4+8*u[4]^2+(-2)*u[1]^2)+(-8) *u[4]^2*((-2)+u[1]^2))*u[2]^5+(-24)*u[3]*u[4]*u[1]*u[2]^6+(-4)*(4+ 2*u[3]^2+3*u[4]^2+(-2)*u[1]^2)*u[2]^7+(-3)*u[2]^9)*(2+u[3]^2+2* u[3]*(2^(1/2)+(-1)*u[4])+(-2)*2^(1/2)*u[4]+u[4]^2+(u[1]+u[2])^2)^(-2) *(2+u[3]^2+2*2^(1/2)*u[4]+u[4]^2+(-2)*u[3]*(2^(1/2)+u[4])+(u[1]+u[2]) ^2)^(-2)*((u[3]^2+u[1]^2)*(2+(-2)*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+ (u[1]+(-1)*u[2])^2)^(-1)*(2+2*2^(1/2)*(u[3]+u[4])+(u[3]+u[4])^2+(u[1]+(-1)*u[2])^2)^(-1)*(u[4]^2+u[2]^2)*(2+2*2^(1/2)*(u[3]+(-1)*u[4])+( u[3]+(-1)*u[4])^2+(u[1]+u[2])^2)^(-1)*(2+(u[3]+(-1)*u[4])^2+2*2^(1/2) *((-1)*u[3]+u[4])+(u[1]+u[2])^2)^(-1))^(-1/2));
  du[5]=0;
  du[6]=0;
end